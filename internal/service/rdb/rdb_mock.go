// Code generated by MockGen. DO NOT EDIT.
// Source: rdb.go

// Package rdb is a generated GoMock package.
package rdb

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	v1alpha "github.com/nokamoto/demo20-apis/cloud/rdb/v1alpha"
	reflect "reflect"
)

// Mockrdb is a mock of rdb interface
type Mockrdb struct {
	ctrl     *gomock.Controller
	recorder *MockrdbMockRecorder
}

// MockrdbMockRecorder is the mock recorder for Mockrdb
type MockrdbMockRecorder struct {
	mock *Mockrdb
}

// NewMockrdb creates a new mock instance
func NewMockrdb(ctrl *gomock.Controller) *Mockrdb {
	mock := &Mockrdb{ctrl: ctrl}
	mock.recorder = &MockrdbMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockrdb) EXPECT() *MockrdbMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *Mockrdb) Create(ctx context.Context, id, parentID string, cluster *v1alpha.Cluster) (*v1alpha.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, id, parentID, cluster)
	ret0, _ := ret[0].(*v1alpha.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockrdbMockRecorder) Create(ctx, id, parentID, cluster interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*Mockrdb)(nil).Create), ctx, id, parentID, cluster)
}
