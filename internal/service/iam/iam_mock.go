// Code generated by MockGen. DO NOT EDIT.
// Source: iam.go

// Package iam is a generated GoMock package.
package iam

import (
	gomock "github.com/golang/mock/gomock"
	v1alpha "github.com/nokamoto/demo20-apis/cloud/iam/v1alpha"
	reflect "reflect"
)

// Mockiam is a mock of iam interface
type Mockiam struct {
	ctrl     *gomock.Controller
	recorder *MockiamMockRecorder
}

// MockiamMockRecorder is the mock recorder for Mockiam
type MockiamMockRecorder struct {
	mock *Mockiam
}

// NewMockiam creates a new mock instance
func NewMockiam(ctrl *gomock.Controller) *Mockiam {
	mock := &Mockiam{ctrl: ctrl}
	mock.recorder = &MockiamMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockiam) EXPECT() *MockiamMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *Mockiam) Create(arg0 string) (*v1alpha.Permission, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*v1alpha.Permission)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockiamMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*Mockiam)(nil).Create), arg0)
}
